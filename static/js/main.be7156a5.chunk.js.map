{"version":3,"sources":["Store.tsx","components/Home.tsx","components/Header.tsx","components/Footer.tsx","components/Favourites.tsx","App.tsx","index.tsx"],"names":["initialState","episodes","favourites","Store","createContext","reducer","state","action","type","payload","StoreProvider","props","useReducer","dispatch","Provider","value","children","EpisodeList","React","lazy","Home","useContext","fetchDataAction","a","fetch","method","headers","res","json","data","_embedded","useEffect","length","toggleFavAction","episode","includes","favWithoutEpisode","filter","fav","id","className","Suspense","fallback","Header","to","Footer","Favourites","App","component","exact","path","Favs","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be7156a5.chunk.js","sourcesContent":["import React, { createContext, useReducer } from 'react'\r\nimport { IState, IAction } from './interface'\r\n\r\n\r\n\r\nconst initialState: IState = {\r\n  episodes: [],\r\n  favourites: []\r\n};\r\n\r\n\r\nexport const Store = createContext<IState | any>(initialState)\r\n\r\n\r\nconst reducer = (state: IState, action: IAction): IState => {\r\n  switch (action.type) {\r\n    case 'FETCH_DATA':\r\n      return {\r\n        ...state,\r\n        episodes: action.payload\r\n      }\r\n    case 'ADD_FAV':\r\n      return {\r\n        ...state,\r\n        favourites: [...state.favourites, action.payload]\r\n      }\r\n    case 'SUB_FAV':\r\n      return {\r\n        ...state,\r\n        favourites:  action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nconst StoreProvider = (props: any): JSX.Element => {\r\n  const [state, dispatch] = useReducer<any>(reducer, initialState);\r\n  return (\r\n    <Store.Provider value={{ state, dispatch }}>\r\n      {props.children}\r\n    </Store.Provider>\r\n  )\r\n}\r\n\r\nexport default StoreProvider\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { Store } from '../Store';\r\nimport { IEpisode, IAction, IEpisodeProps } from '../interface'\r\n\r\n\r\nconst EpisodeList = React.lazy<any>(() => import('./EpisodeList'))\r\n\r\nconst Home = ():JSX.Element => {\r\n  //Get content from state.\r\n  const { state, dispatch } = useContext(Store);\r\n\r\n  const fetchDataAction = async () => {\r\n    // const URL = 'http://api.tvmaze.com/singlesearch/shows?q=rick-&-morty&embed=episodes'\r\n    const URL = 'https://api.tvmaze.com/singlesearch/shows?q=castlevania&embed=episodes'\r\n    const res = await fetch(URL, {\r\n      method: \"POST\",\r\n        headers: {\r\n            \"Access-Control-Allow-Origin\": \"*\"\r\n        }\r\n    });\r\n    const data = await res.json();\r\n    return dispatch({\r\n      type: 'FETCH_DATA',\r\n      payload: data._embedded.episodes\r\n    })\r\n  }\r\n\r\n  const toggleFavAction = (episode: IEpisode): IAction => {\r\n    const episodeInFav = state.favourites.includes(episode);\r\n\r\n    if (episodeInFav) { //Episode exists\r\n      const favWithoutEpisode = state.favourites.filter((fav: IEpisode) => fav.id !== episode.id);\r\n      return dispatch({\r\n        type: 'SUB_FAV',\r\n        payload: favWithoutEpisode\r\n      })\r\n    } else { //Episode does not exist\r\n      return dispatch({\r\n        type: 'ADD_FAV',\r\n        payload: episode\r\n      })\r\n    }\r\n  }\r\n\r\n  //Init Fetch\r\n  useEffect(() => {\r\n    state.episodes.length === 0 && fetchDataAction();\r\n  });\r\n\r\n  const props: IEpisodeProps  = {\r\n    episodes: state.episodes,\r\n    favourites: state.favourites,\r\n    toggleFavAction\r\n  }\r\n\r\n  return (\r\n    <main className=\"main\">\r\n        <React.Suspense fallback={<div><h4>Loading...</h4></div>}>\r\n          <section className=\"episode-layout\">\r\n            <EpisodeList {...props} />\r\n          </section>\r\n        </React.Suspense>\r\n      </main>\r\n  )\r\n}\r\n\r\nexport default Home;\r\n","import React, { useContext } from 'react';\r\nimport { Store } from '../Store';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Header = () => {\r\n  //Get content from state.\r\n  const { state } = useContext(Store);\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <div>\r\n        <Link to='/'>\r\n          <h1 className=\"brand\">Castlevania</h1>\r\n        </Link>\r\n        <p>Pick your favourite episode!</p>\r\n      </div>\r\n\r\n      <ul className=\"nav\">\r\n        <li><Link to={'/'}>Home</Link></li>\r\n        <li><Link to={'/favs'}>Favourites: {state.favourites.length}</Link></li>\r\n      </ul>\r\n\r\n    </header>\r\n\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <p>My React Typescript Castlevania App &copy; 2020.</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React, { useContext } from 'react';\r\nimport { Store } from '../Store';\r\nimport { IEpisode, IAction, IEpisodeProps } from '../interface'\r\n\r\nconst EpisodeList = React.lazy<any>(() => import('./EpisodeList'))\r\n\r\n\r\nconst Favourites = (): JSX.Element => {\r\n\r\n  const { state, dispatch } = useContext(Store);\r\n\r\n  const toggleFavAction = (episode: IEpisode): IAction => {\r\n    const episodeInFav = state.favourites.includes(episode);\r\n\r\n    if (episodeInFav) { //Episode exists\r\n      const favWithoutEpisode = state.favourites.filter((fav: IEpisode) => fav.id !== episode.id);\r\n      return dispatch({\r\n        type: 'SUB_FAV',\r\n        payload: favWithoutEpisode\r\n      })\r\n    } else { //Episode does not exist\r\n      return dispatch({\r\n        type: 'ADD_FAV',\r\n        payload: episode\r\n      })\r\n    }\r\n  }\r\n\r\n  const props: IEpisodeProps = {\r\n    episodes: state.favourites,\r\n    favourites: state.favourites,\r\n    toggleFavAction\r\n  }\r\n\r\n\r\n  return (\r\n    <main className=\"main\">\r\n      <React.Suspense fallback={<div><h4>Loading...</h4></div>}>\r\n        <section className=\"episode-layout\">\r\n          <EpisodeList {...props} />\r\n        </section>\r\n      </React.Suspense>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Favourites\r\n","import React from 'react';\nimport { Route, BrowserRouter, Switch} from 'react-router-dom'\nimport Home from './components/Home'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Favs from './components/Favourites'\nimport './app.css'\n\n\n\nfunction App(): JSX.Element {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Header/>\n        <Switch>\n          <Route component={Home} exact path=\"/\"/>\n          <Route component={Favs} exact path=\"/favs\"/>\n        </Switch>\n        <Footer/>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport StoreProvider from './Store';\nimport App from './App';\n\n\nReactDOM.render(\n  <StoreProvider>\n    <React.StrictMode>\n      \n        <App />\n      \n    </React.StrictMode>\n  </StoreProvider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}